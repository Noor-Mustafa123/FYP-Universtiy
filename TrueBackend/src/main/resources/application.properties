
#spring.datasource.url=jdbc:mysql://sql12.freesqldatabase.com:3306/sql12723919
#use the externel link  the internal link is for railway internal commuication only the externel communication link is in the settings of the datbase deployement
spring.datasource.url=jdbc:mysql://viaduct.proxy.rlwy.net:29992/railway
#spring.datasource.url=jdbc:mysql://root:sUdXjJPVHNFNSZXeQWCaPNZTLWGdmjGO@mysql.railway.internal:3306/railway

#spring.datasource.username=${DATABASE_USERNAME}
#spring.datasource.username=sql12723919
spring.datasource.username=root

#spring.datasource.password=${DATABASE_PASSWORD}
#spring.datasource.password=v1ecEkLDDY
spring.datasource.password=sUdXjJPVHNFNSZXeQWCaPNZTLWGdmjGO

spring.jpa.hibernate.ddl-auto=update
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jmx.enabled=false
spring.jpa.open-in-view=false
#logging.level.org.springframework.security=DEBUG


###### Email Properties ######
#smtp mail properties
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=assassin6180@gmail.com
spring.mail.password=pjyw wevf ehrm hzab
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Application Security JWT Configuration
application.security.jwt.secret-key=B5r5aTyLW1vdorJLHs9egCQB3NFgKm9p3kW5qTxMSp9RzU2s
application.security.jwt.expiration=86400000
application.security.jwt.refresh-token.expiration=604800000



#?The Eureka server is running at http://localhost:8761/.
#?However, the Eureka server's API is exposed at the /eureka context path http://localhost:8761/eureka
#?solving the bug

#pecify the Eureka server URL and application name in your application.properties
spring.application.name=fyp-university
#This specifies the URL of the Eureka server where your application will register itself. Replace <EUREKA_SERVER_HOST> and <EUREKA_SERVER_PORT> with the actual host and port of your Eureka server.
#! for testing
#eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
#! for deployment
 eureka.client.serviceUrl.defaultZone = eurokaserver.railway.internal
#This property indicates whether your application should register itself with the Eureka server. Setting this to true means your API Gateway will be registered as a service in Eureka.
eureka.client.register-with-eureka=true
#This property indicates whether your application should fetch the registry information from the Eureka server. Setting this to true means your API Gateway will be able to discover other services registered with Eureka.
eureka.client.fetch-registry=true


